name: Comprehensive CI Pipeline

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]

jobs:
  code-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Validate Code Formatting
        run: mvn spring-javaformat:apply io.spring.javaformat:spring-javaformat-maven-plugin:validate

  build-and-test:
    needs: code-format
    runs-on: ubuntu-latest
    env:
      NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
      DB_STEP_ENABLED: 'true'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21 & cache Maven
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Run Tests
        if: ${{ env.DB_STEP_ENABLED == 'true' }}
        run: mvn -B clean verify jacoco:report

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: target/site/jacoco

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: target/surefire-reports/*.xml

  dependency-check:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      NVD_API_KEY: ${{ secrets.NVD_API_KEY }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Cache OWASP Dependency-Check data
        uses: actions/cache@v4
        with:
          path: ~/.dependency-check
          key: dc-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            dc-${{ runner.os }}-

      - name: OWASP Dependency-Check
        run: mvn -B org.owasp:dependency-check-maven:check

      - name: Upload dependency check report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: target/dependency-check-report.html

  security-scan:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
